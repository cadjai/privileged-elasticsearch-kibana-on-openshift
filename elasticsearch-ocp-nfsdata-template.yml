apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: elasticsearch-ocp-nfsdata-template
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2018-03-20T02:06:14Z
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker.elastic.co/elasticsearch/${IMAGE_NAME}:${IMAGE_TAG}
      generation: 1
      importPolicy: {}
      name: ${IMAGE_TAG}
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    ports:
    - name: port-1
      port: 9200
      protocol: TCP
      targetPort: 9200
    - name: port-2
      port: 9300
      protocol: TCP
      targetPort: 9300
    selector:
      app: ${APPLICATION}
      deploymentconfig: ${APPLICATION}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    host: ${APPLICATION}-${NAMESPACE}.${APP_DOMAIN}
    port:
      targetPort: port-1
    to:
      kind: Service
      name: ${APPLICATION}
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-03-21T01:23:03Z
        status: "True"
        type: Admitted
      host: ${APPLICATION}-${NAMESPACE}.${APP_DOMAIN}
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION}
      deploymentconfig: ${APPLICATION}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ${APPLICATION}
          deploymentconfig: ${APPLICATION}
      spec:
        containers:
        - image: docker.elastic.co/elasticsearch/elasticsearch@sha256:49319ae0acab8ac2092a3ea9dd17d812d68677733de47bea43c79db503135477
          imagePullPolicy: IfNotPresent
          name: ${IMAGE_NAME}
          ports:
          - containerPort: 9200
            protocol: TCP
          - containerPort: 9300
            protocol: TCP
          resources:
            limits:
              memory: 4Gi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/elastisearch/temp
            name: tempdirvol
          - mountPath: /usr/share/elasticsearch/config/jvm.options
            name: esjvmpropsvol
            subPath: jvm.options
          - mountPath: /usr/share/elasticsearch/logs
            name: eslogsdir
          - mountPath: /usr/share/elasticsearch/data
            name: esdatadir
        dnsPolicy: ClusterFirst
        nodeSelector:
          ${NODE_LABEL_KEY}: ${NODE_LABEL_VALUE}
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          supplementalGroups:
          - 1000
        serviceAccount: ${SERVICE_ACCOUNT}
        serviceAccountName: ${SERVICE_ACCOUNT}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tempdirvol
        - configMap:
            defaultMode: 420
            name: ${JVMCONFIGMAP}
          name: esjvmpropsvol
        - name: eslogsdir
          persistentVolumeClaim:
            claimName: LOGSPVCNAME
        - name: esdatadir
          persistentVolumeClaim:
            claimName: ${DATAPVCNAME}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${IMAGE_NAME}
        from:
          kind: ImageStreamTag
          name: ${IMAGE_NAME}:${IMAGE_TAG}
          namespace: ${NAMESPACE}
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
parameters:
  - name: SERVICE_ACCOUNT
    description: Name of service account that is able to run pods as root and use HostPath volumes for the Elastic Search application.
    required: true
    value: es-sa
  - name: NAMESPACE
    description: Name of namespace where the application runs
    required: false
    value: es-kafka
  - name: APPLICATION
    description: Name of deployed Elastic Search application.
    required: false
    value: elasticsearch
  - name: APP_DOMAIN
    description: Name of application domain with the OCP cluster this is being deployed to.
    required: true
    value: apps.fd51.example.opentlc.com
  - name: JVMCONFIGMAP
    description: Name of jvm properties ConfigMap with JVM optons to overwrite defaults.
    required: false
    value: esjvmoptprops-cm
  - name: LOGSPVCNAME
    description: Name of logging PVC .
    required: false
    value: elastic-logs-nfs-pvc
  - name: HOSTPATHNAME
    description: Name of host path directory .
    required: false
    value: /local
  - name: IMAGE_NAME
    description: The name of image 
    value: elasticsearch
    required: false
  - name: IMAGE_TAG
    description: The tag of the image 
    value: latest
    required: false
  - name: LOGSPVCNAME
    description: Name of deployed Elastic Search application.
    required: false
    value: elastic-logs-nfs-pvc
  - name: DATAPVCNAME
    description: Name of deployed Elastic Search application.
    required: false
    value: elastic-data-nfs-pvc
  - name: NODE_LABEL_KEY
    description: The label of the node this application should be deployed to 
    value: env
    required: false
  - name: NODE_LABEL_VALUE
    description: The value of the label of the node this application should be deployed to 
    value: app
    required: false
