apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: elasticsearch-ocp-nfspv-template
objects:
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    annotations:
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${CONFPVNAME}
  spec:
    accessModes:
    - ReadWriteMany
    capacity:
      storage: 2Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: ${CONFPVCNAME}
      namespace: ${NAMESPACE}
    nfs:
      path: ${CONFNFSVOLNAME}
      server: ${NFSSERVER}
    persistentVolumeReclaimPolicy: Retain
  status: {}
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    annotations:
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${DATAPVNAME}
  spec:
    accessModes:
    - ReadWriteMany
    capacity:
      storage: 6Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: ${DATAPVCNAME}
      namespace: ${NAMESPACE}
    nfs:
      path: ${DATANFSVOLNAME}
      server: ${NFSSERVER}
    persistentVolumeReclaimPolicy: Retain
  status: {}
- apiVersion: v1
  kind: PersistentVolume
  metadata:
    annotations:
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${LOGSPVNAME}
  spec:
    accessModes:
    - ReadWriteMany
    capacity:
      storage: 6Gi
    claimRef:
      apiVersion: v1
      kind: PersistentVolumeClaim
      name: ${LOGSPVCNAME}
      namespace: ${NAMESPACE}
    nfs:
      path: ${LOGSNFSVOLNAME}
      server: ${NFSSERVER}
    persistentVolumeReclaimPolicy: Retain
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${DATAPVCNAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 6Gi
    volumeName: ${DATAPVNAME}
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${CONFPVCNAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 3Gi
    volumeName: ${CONFPVNAME}
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${LOGSPVCNAME}
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: 3Gi
    volumeName: ${LOGSPVNAME}
  status: {}
parameters:
  - name: NAMESPACE
    description: Name of namespace where the application runs
    required: false
    value: es-kafka
  - name: APPLICATION
    description: Name of deployed Elastic Search application.
    required: false
    value: elasticsearch
  - name: NFSSERVER
    description: Name of nfs server providing persistent storage.
    required: false
    value: support1.fd51.internal
  - name: CONFNFSVOLNAME
    description: Name of NFS vol to support this pv.
    required: false
    value: /exports/elastic-conf
  - name: CONFPVNAME
    description: Name of deployed Elastic Search application.
    required: false
    value: elastic-conf-nfs-pv
  - name: CONFPVCNAME
    description: Name of deployed Elastic Search application.
    required: false
    value: elastic-conf-nfs-pvc
  - name: DATANFSVOLNAME
    description: Name of NFS vol to support this pv.
    required: false
    value: /exports/elastic-data
  - name: DATAPVNAME
    description: Name of deployed Elastic Search application.
    required: false
    value: elastic-data-nfs-pv
  - name: DATAPVCNAME
    description: Name of deployed Elastic Search application.
    required: false
    value: elastic-data-nfs-pvc
  - name: LOGSNFSVOLNAME
    description: Name of NFS vol to support this pv.
    required: false
    value: /exports/elastic-logs
  - name: LOGSPVNAME
    description: Name of deployed Elastic Search application.
    required: false
    value: elastic-logs-nfs-pv
  - name: LOGSPVCNAME
    description: Name of deployed Elastic Search application.
    required: false
    value: elastic-logs-nfs-pvc
