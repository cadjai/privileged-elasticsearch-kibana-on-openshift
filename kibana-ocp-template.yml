apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: kibana-ocp-template
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2018-03-21T01:20:32Z
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker.elastic.co/kibana/${IMAGE_NAME}:${IMAGE_TAG}
      generation: 1
      importPolicy: {}
      name: ${IMAGE_TAG}
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    ports:
    - port: 5601
      protocol: TCP
      targetPort: 5601
    selector:
      app: ${APPLICATION}
      deploymentconfig: ${APPLICATION}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    creationTimestamp: null
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    host: ${APPLICATION}-${NAMESPACE}.${APP_DOMAIN}
    to:
      kind: Service
      name: ${APPLICATION}
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: 2018-03-21T01:23:20Z
        status: "True"
        type: Admitted
      host: ${APPLICATION}-${NAMESPACE}.${APP_DOMAIN}
      routerName: router
      wildcardPolicy: None
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: ${APPLICATION}
    name: ${APPLICATION}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION}
      deploymentconfig: ${APPLICATION}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: ${APPLICATION}
          deploymentconfig: ${APPLICATION}
      spec:
        containers:
        - image: docker.elastic.co/kibana/kibana@sha256:9ce1a2bf1e14697ea3ae8fe3736e8e859e03d643a53e95f911e39c0885dad4f7
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          name: ${IMAGE_NAME}
          ports:
          - containerPort: 5601
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/kibana/config/kibana.yml
            name: kibanaconfigvol
            subPath: kibana.yml
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: ${KIBANACONFIGMAP}
          name: kibanaconfigvol
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${IMAGE_NAME}
        from:
          kind: ImageStreamTag
          name: ${IMAGE_NAME}:${IMAGE_TAG}
          namespace: ${NAMESPACE}
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
parameters:
  - name: SERVICE_ACCOUNT
    description: Name of service account that is able to run pods as root and use HostPath volumes for the Elastic Search application.
    required: true
    value: es-sa
  - name: NAMESPACE
    description: Name of namespace where the application runs
    required: false
    value: es-kafka
  - name: APPLICATION
    description: Name of deployed Elastic Search application.
    required: false
    value: kibana
  - name: APP_DOMAIN
    description: Name of application domain with the OCP cluster this is being deployed to.
    required: true
    value: apps.fd51.example.opentlc.com
  - name: KIBANACONFIGMAP
    description: Name of kibana.yml properties ConfigMap to overwrite defaults.
    required: false
    value: kibanaconfig-cm
  - name: IMAGE_NAME
    description: The name of image 
    value: kibana
    required: false
  - name: IMAGE_TAG
    description: The tag of the image 
    value: 5.6.8
    required: false
